openapi: 3.0.3
info:  
  title: JK Labour and Employment Department, Jammu & Kashmir
  description:  >- 
                The state of Jammu and Kashmir as a constituent of republic is committed to the welfare of the working class and to the empowerment of the Labourers to enable them to play their role in the institution building of the state. It is with these ideals in view that the state of Jammu and Kashmir has adopted 22 central legislations relating to the Labourers and which take care of regulatory mechanisms for implementation of these laws and social security measures to improve socio-economic conditions of the working class. These welfare measures include Provident fund, Medical insurance, a package of Welfare schemes for building and construction workers, Rehabilitation of Child Labourers and Bonded labourers, concialiation between employees and employres in case of a dispute etc.The state has also enacted three state legislations dealing with the welfare of the working class in the state.
  termsOfService: https://apisetu.gov.in/api-policy
  version: 3.0.0
servers:
  - url: 'https://apisetu.gov.in/certificate/v3/jklabouremp'
paths:
  
  /alimw:
    post:
      tags:
        - APIs
      summary: Application for License for Inter State Migrant Workmen
      description: API to verify Application for License for Inter State Migrant Workmen.
      security:
        - clientId: []
          apiKey: []
      operationId: alimw
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - xml
                    
                    - pdf
                    
                    
                certificateParameters:
                  type: object
                  required:
                    - ApprovalNumber
                    
                    - FullName
                    
                    - DOB
                    
                    - GENDER
                      
                  properties:
                    ApprovalNumber:
                      type: string
                      description: Approval Number
                      example: "129902311"
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"
                    DOB:
                      type: string
                      description: Date of birth in DD-MM-YYYY format
                      example: "31-12-1980"
                    GENDER:
                      type: string
                      description: Gender - Male for male, Female for female and O for other
                      example: "Male"  
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
            application/xml:
              schema:  
                $ref: '#/components/schemas/AcademicCertificateSchema'  
            
            
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
            
            
            
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
  /alsfc:
    post:
      tags:
        - APIs
      summary: Application/ License for Factory
      description: API to verify Application/ License for Factory.
      security:
        - clientId: []
          apiKey: []
      operationId: alsfc
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - xml
                    
                    - pdf
                    
                    
                certificateParameters:
                  type: object
                  required:
                    - ApprovalNumber
                    
                    - FullName
                    
                    - DOB
                    
                    - GENDER
                      
                  properties:
                    ApprovalNumber:
                      type: string
                      description: Approval Number
                      example: "129902311"
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"
                    DOB:
                      type: string
                      description: Date of birth in DD-MM-YYYY format
                      example: "31-12-1980"
                    GENDER:
                      type: string
                      description: Gender - Male for male, Female for female and O for other
                      example: "Male"  
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
            application/xml:
              schema:  
                $ref: '#/components/schemas/AcademicCertificateSchema'  
            
            
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
            
            
            
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
  /govid:
    post:
      tags:
        - APIs
      summary: ID Card
      description: API to verify ID Card.
      security:
        - clientId: []
          apiKey: []
      operationId: govid
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - xml
                    
                    - pdf
                    
                    
                certificateParameters:
                  type: object
                  required:
                    - ApplicationID
                    
                    - DOB
                      
                  properties:
                    ApplicationID:
                      type: string
                      description: Application ID
                      example: "120065396860"
                       
                    
                    
                    DOB:
                      type: string
                      description: Date of birth in DD-MM-YYYY format
                      example: "31-12-1980"  
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
            application/xml:
              schema:  
                $ref: '#/components/schemas/AcademicCertificateSchema'  
            
            
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
            
            
            
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
  /esnoc:
    post:
      tags:
        - APIs
      summary: NOC for Employment Purpose
      description: API to verify NOC for Employment Purpose.
      security:
        - clientId: []
          apiKey: []
      operationId: esnoc
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - pdf  
                    
                certificateParameters:
                  type: object
                  required:
                    - ApplicationID
                    
                    - DOB
                      
                  properties:
                    ApplicationID:
                      type: string
                      description: Application ID
                      example: "136776381358"
                       
                    
                    
                    DOB:
                      type: string
                      description: Date of birth in DD-MM-YYYY format
                      example: "31-12-1980"  
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
              application/pdf:
                example: Response body contains contents of the certificate in PDF format.
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
  /clcer:
    post:
      tags:
        - APIs
      summary: Registration Certificate for Contract Labour License
      description: API to verify Registration Certificate for Contract Labour License.
      security:
        - clientId: []
          apiKey: []
      operationId: clcer
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - xml
                    
                    - pdf
                    
                    
                certificateParameters:
                  type: object
                  required:
                    - ApprovalNumber
                    
                    - FullName
                    
                    - DOB
                    
                    - GENDER
                      
                  properties:
                    ApprovalNumber:
                      type: string
                      description: Approval Number
                      example: "129902311"
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"
                    DOB:
                      type: string
                      description: Date of birth in DD-MM-YYYY format
                      example: "31-12-1980"
                    GENDER:
                      type: string
                      description: Gender - Male for male, Female for female and O for other
                      example: "Male"  
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
            application/xml:
              schema:  
                $ref: '#/components/schemas/AcademicCertificateSchema'  
            
            
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
            
            
            
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
  /rcbcw:
    post:
      tags:
        - APIs
      summary: Registration Certificate of Building and other Construction Workers
      description: API to verify Registration Certificate of Building and other Construction Workers.
      security:
        - clientId: []
          apiKey: []
      operationId: rcbcw
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - xml
                    
                    - pdf
                    
                    
                certificateParameters:
                  type: object
                  required:
                    - ApprovalNumber
                    
                    - FullName
                    
                    - DOB
                    
                    - GENDER
                      
                  properties:
                    ApprovalNumber:
                      type: string
                      description: Approval Number
                      example: "129902311"
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"
                    DOB:
                      type: string
                      description: Date of birth in DD-MM-YYYY format
                      example: "31-12-1980"
                    GENDER:
                      type: string
                      description: Gender - Male for male, Female for female and O for other
                      example: "Male"  
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
            application/xml:
              schema:  
                $ref: '#/components/schemas/AcademicCertificateSchema'  
            
            
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
            
            
            
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
  /ercer:
    post:
      tags:
        - APIs
      summary: Registration Certificate of Establishment Employing Contract Labour
      description: API to verify Registration Certificate of Establishment Employing Contract Labour.
      security:
        - clientId: []
          apiKey: []
      operationId: ercer
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - xml
                    
                    - pdf
                    
                    
                certificateParameters:
                  type: object
                  required:
                    - ApprovalNumber
                    
                    - FullName
                    
                    - DOB
                    
                    - GENDER
                      
                  properties:
                    ApprovalNumber:
                      type: string
                      description: Approval Number
                      example: "129902311"
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"
                    DOB:
                      type: string
                      description: Date of birth in DD-MM-YYYY format
                      example: "31-12-1980"
                    GENDER:
                      type: string
                      description: Gender - Male for male, Female for female and O for other
                      example: "Male"  
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
            application/xml:
              schema:  
                $ref: '#/components/schemas/AcademicCertificateSchema'  
            
            
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
            
            
            
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
  /srcer:
    post:
      tags:
        - APIs
      summary: Registration Certificate of Shops And Commercial Establishment
      description: API to verify Registration Certificate of Shops And Commercial Establishment.
      security:
        - clientId: []
          apiKey: []
      operationId: srcer
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - xml
                    
                    - pdf
                    
                    
                certificateParameters:
                  type: object
                  required:
                    - ApprovalNumber
                    
                    - FullName
                    
                    - DOB
                    
                    - GENDER
                      
                  properties:
                    ApprovalNumber:
                      type: string
                      description: Approval Number
                      example: "129902311"
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"
                    DOB:
                      type: string
                      description: Date of birth in DD-MM-YYYY format
                      example: "31-12-1980"
                    GENDER:
                      type: string
                      description: Gender - Male for male, Female for female and O for other
                      example: "Male"  
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
            application/xml:
              schema:  
                $ref: '#/components/schemas/AcademicCertificateSchema'  
            
            
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
            
            
            
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
  /rpeea:
    post:
      tags:
        - APIs
      summary: Registration of Principal Employer Establishment under the Inter State Migrant Workmen (RE&amp;CS) Act
      description: API to verify Registration of Principal Employer Establishment under the Inter State Migrant Workmen (RE&amp;CS) Act.
      security:
        - clientId: []
          apiKey: []
      operationId: rpeea
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - xml
                    
                    - pdf
                    
                    
                certificateParameters:
                  type: object
                  required:
                    - ApprovalNumber
                    
                    - FullName
                    
                    - DOB
                    
                    - GENDER
                      
                  properties:
                    ApprovalNumber:
                      type: string
                      description: Approval Number
                      example: "129902311"
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"
                    DOB:
                      type: string
                      description: Date of birth in DD-MM-YYYY format
                      example: "31-12-1980"
                    GENDER:
                      type: string
                      description: Gender - Male for male, Female for female and O for other
                      example: "Male"  
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
            application/xml:
              schema:  
                $ref: '#/components/schemas/AcademicCertificateSchema'  
            
            
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
            
            
            
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
components:
  schemas:
    ConsentArtifactSchema:
      $ref: './common/ConsentArtifactSchema.yaml#/ConsentArtifactSchema'
    AcademicCertificateSchema:
      $ref: './common/AcademicCertificateSchema.yaml#/AcademicCertificateSchema'
          
  responses:
    400Error:
      $ref: './common/ErrorResponse.yaml#/400Error'
    401Error:
      $ref: './common/ErrorResponse.yaml#/401Error'
    404Error:
      $ref: './common/ErrorResponse.yaml#/404Error'
    500Error:
      $ref: './common/ErrorResponse.yaml#/500Error'
    502Error:
      $ref: './common/ErrorResponse.yaml#/502Error'
    503Error:
      $ref: './common/ErrorResponse.yaml#/503Error'
    504Error:
      $ref: './common/ErrorResponse.yaml#/504Error'
  securitySchemes:
    clientId:
      type: apiKey
      in: header
      name: X-APISETU-CLIENTID
    apiKey:
      type: apiKey
      in: header
      name: X-APISETU-APIKEY