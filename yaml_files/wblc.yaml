openapi: 3.0.3
info:  
  title: Labour Commissioner, Govt of West Bengal, West Bengal
  description:  >- 
                The License or certificates issued by the competent authority under different Ease of Doing Business (EoDB) services of the Directorate shall be pushed into the Digi locker. The Citizen or Entrepreneurs can view or download the same from Digilocker and at the same time the documents can be shared  through Web Services as and when required by any other services.
  termsOfService: https://apisetu.gov.in/api-policy
  version: 3.0.0
servers:
  - url: 'https://apisetu.gov.in/certificate/v3/wblc'
paths:
  
  /arcmw:
    post:
      tags:
        - APIs
      summary: Application for Registration/Renewal of Contractor Migrant Workmen license
      description: API to verify Application for Registration/Renewal of Contractor Migrant Workmen license.
      security:
        - clientId: []
          apiKey: []
      operationId: arcmw
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - pdf
                    
                    
                certificateParameters:
                  type: object
                  required:
                    - REGNO
                    
                    - FullName
                    
                    - GENDER
                    
                    - Mobile
                      
                  properties:
                    REGNO:
                      type: string
                      description: Registration Number
                      example: "DHR30/IMW/000001"
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"
                    GENDER:
                      type: string
                      description: Gender - Male for male, Female for female and O for other
                      example: "Male"
                    Mobile:
                      type: string
                      description: Mobile No
                      example: "9876543210"
                      
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
            
            
            
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
  /rcbcw:
    post:
      tags:
        - APIs
      summary: Registration Certificate of Building and other Construction Workers
      description: API to verify Registration Certificate of Building and other Construction Workers.
      security:
        - clientId: []
          apiKey: []
      operationId: rcbcw
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - pdf  
                    
                certificateParameters:
                  type: object
                  required:
                    - REGNO
                    
                    - FullName
                    
                    - GENDER
                    
                    - Mobile
                      
                  properties:
                    REGNO:
                      type: string
                      description: Registration Number
                      example: "DHR30/BCR/000001"
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"
                    GENDER:
                      type: string
                      description: Gender - Male for male, Female for female and O for other
                      example: "Male"
                    Mobile:
                      type: string
                      description: Mobile No
                      example: "9876543210"
                      
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
              application/pdf:
                example: Response body contains contents of the certificate in PDF format.
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
  /ercer:
    post:
      tags:
        - APIs
      summary: Registration Certificate of Establishment Employing Contract Labour
      description: API to verify Registration Certificate of Establishment Employing Contract Labour.
      security:
        - clientId: []
          apiKey: []
      operationId: ercer
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - pdf
                    
                    
                certificateParameters:
                  type: object
                  required:
                    - REGNO
                    
                    - FullName
                    
                    - GENDER
                    
                    - Mobile
                      
                  properties:
                    REGNO:
                      type: string
                      description: Registration Number
                      example: "DHR30/CLR/000001"
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"
                    GENDER:
                      type: string
                      description: Gender - Male for male, Female for female and O for other
                      example: "Male"
                    Mobile:
                      type: string
                      description: Mobile No
                      example: "9876543210"
                      
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
            
            
            
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
  /cecer:
    post:
      tags:
        - APIs
      summary: Renewal Certificate of Contract Labour License
      description: API to verify Renewal Certificate of Contract Labour License.
      security:
        - clientId: []
          apiKey: []
      operationId: cecer
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - pdf  
                    
                certificateParameters:
                  type: object
                  required:
                    - LNO
                    
                    - FullName
                    
                    - GENDER
                    
                    - Mobile
                      
                  properties:
                    LNO:
                      type: string
                      description: License Number
                      example: "DHR30/CLL/000001"
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"
                    GENDER:
                      type: string
                      description: Gender - Male for male, Female for female and O for other
                      example: "Male"
                    Mobile:
                      type: string
                      description: Mobile No
                      example: "9876543210"
                      
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
              application/pdf:
                example: Response body contains contents of the certificate in PDF format.
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
components:
  schemas:
    ConsentArtifactSchema:
      $ref: './common/ConsentArtifactSchema.yaml#/ConsentArtifactSchema'
    AcademicCertificateSchema:
      $ref: './common/AcademicCertificateSchema.yaml#/AcademicCertificateSchema'
          
  responses:
    400Error:
      $ref: './common/ErrorResponse.yaml#/400Error'
    401Error:
      $ref: './common/ErrorResponse.yaml#/401Error'
    404Error:
      $ref: './common/ErrorResponse.yaml#/404Error'
    500Error:
      $ref: './common/ErrorResponse.yaml#/500Error'
    502Error:
      $ref: './common/ErrorResponse.yaml#/502Error'
    503Error:
      $ref: './common/ErrorResponse.yaml#/503Error'
    504Error:
      $ref: './common/ErrorResponse.yaml#/504Error'
  securitySchemes:
    clientId:
      type: apiKey
      in: header
      name: X-APISETU-CLIENTID
    apiKey:
      type: apiKey
      in: header
      name: X-APISETU-APIKEY