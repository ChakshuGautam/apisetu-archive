openapi: 3.0.3
info:  
  title: Ranchi Women's College, Jharkhand
  description:  >- 
                Ranchi Women’s College has carved a niche for itself in the world of higher education for women in social sciences/ humanities, sciences and commerce. Emerging as a torch bearer in the field of Women Education Ranchi Women’s college has grown to be a Centre of Excellence in the domain of higher education for women of Jharkhand, Bihar. West Bengal and Orissa. Another feather was added to its cap when this College got Autonomy Status by the UGC with effect from 2011-12. The college has been innovating and introducing new courses in response to the demands of the students and the Job-market. The college has attempted to keep itself updated in knowledge and skills by combining the traditional subjects in Arts and Science with vocational subjects in the emerging areas such as Biotechnology, information technology etc. Since the traditional programmes in Arts, Science and Commerce have more of knowledge content and less of skill content, it is enriched through classroom discussions, seminars, tutorials, project work, networking with NGOs and lectures/workshops by experts from India and abroad.
  termsOfService: https://apisetu.gov.in/api-policy
  version: 3.0.0
servers:
  - url: 'https://apisetu.gov.in/certificate/v3/ranchiwomenscollege'
paths:
  
  /dgmst:
    post:
      tags:
        - APIs
      summary: Degree/ Diploma Marksheet
      description: API to verify Degree/ Diploma Marksheet.
      security:
        - clientId: []
          apiKey: []
      operationId: dgmst
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - xml
                    
                    - pdf
                    
                    
                certificateParameters:
                  type: object
                  required:
                    - REGNO
                    - RROLL
                    - YEAR
                    - SEM
                    - MONTH
                    
                    - FullName
                      
                  properties:
                    REGNO:
                      type: string
                      description: Registration No
                      example: "RU2020012xxx"
                       
                    
                    RROLL:
                      type: string
                      description: Roll No
                      example: "20BAGRxxx"
                       
                    
                    YEAR:
                      type: string
                      description: Year
                      example: ""
                       
                    
                    SEM:
                      type: string
                      description: Semester
                      example: ""
                       
                    
                    MONTH:
                      type: string
                      description: Month
                      example: ""
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"  
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
            application/xml:
              schema:  
                $ref: '#/components/schemas/AcademicCertificateSchema'  
            
            
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
            
            
            
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
components:
  schemas:
    ConsentArtifactSchema:
      $ref: './common/ConsentArtifactSchema.yaml#/ConsentArtifactSchema'
    AcademicCertificateSchema:
      $ref: './common/AcademicCertificateSchema.yaml#/AcademicCertificateSchema'
          
  responses:
    400Error:
      $ref: './common/ErrorResponse.yaml#/400Error'
    401Error:
      $ref: './common/ErrorResponse.yaml#/401Error'
    404Error:
      $ref: './common/ErrorResponse.yaml#/404Error'
    500Error:
      $ref: './common/ErrorResponse.yaml#/500Error'
    502Error:
      $ref: './common/ErrorResponse.yaml#/502Error'
    503Error:
      $ref: './common/ErrorResponse.yaml#/503Error'
    504Error:
      $ref: './common/ErrorResponse.yaml#/504Error'
  securitySchemes:
    clientId:
      type: apiKey
      in: header
      name: X-APISETU-CLIENTID
    apiKey:
      type: apiKey
      in: header
      name: X-APISETU-APIKEY