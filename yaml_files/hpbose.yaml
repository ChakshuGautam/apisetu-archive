openapi: 3.0.3
info:  
  title: Himachal Pradesh Board of School Education, Himachal Pradesh
  description:  >- 
                Himachal Pradesh Board of School Education, Dharamshala (http://hpbose.org/) has made available Class X (2012-18) & Class XII (2012-18) provisional certificates, which can be pulled by students into their accounts.
  termsOfService: https://apisetu.gov.in/api-policy
  version: 3.0.0
servers:
  - url: 'https://apisetu.gov.in/certificate/v3/hpbose'
paths:
  
  /svcer:
    post:
      tags:
        - APIs
      summary: Class X Provisional Certificate
      description: API to verify Class X Provisional Certificate.
      security:
        - clientId: []
          apiKey: []
      operationId: svcer
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - pdf
                    
                    
                certificateParameters:
                  type: object
                  required:
                    - ROLL
                    - YOP
                    - DOB
                    
                    - FullName
                      
                  properties:
                    ROLL:
                      type: string
                      description: Roll No.
                      example: "18110000"
                       
                    
                    YOP:
                      type: string
                      description: Year of Passing
                      example: "2018"
                       
                    
                    DOB:
                      type: string
                      description: Date of Birth
                      example: "dd-mm-yyyy"
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"  
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
            
            
            
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
  /hvcer:
    post:
      tags:
        - APIs
      summary: Class XII Provisional Certificate
      description: API to verify Class XII Provisional Certificate.
      security:
        - clientId: []
          apiKey: []
      operationId: hvcer
      requestBody:
        description: Request format
        content:
          application/json:
            schema:
              type: object
              required:
                - txnId
                - format
              properties:
                txnId:
                  type: string
                  format: uuid
                  description: A unique transaction id for this request in UUID format. It is used for tracking the request.
                  example: "f7f1469c-29b0-4325-9dfc-c567200a70f7"
                format:
                  type: string
                  description: The format of the certificate in response.
                  enum:
                    - pdf
                    
                    
                certificateParameters:
                  type: object
                  required:
                    - ROLL
                    - YOP
                    - DOB
                    
                    - FullName
                      
                  properties:
                    ROLL:
                      type: string
                      description: Roll No.
                      example: "18110000"
                       
                    
                    YOP:
                      type: string
                      description: Year of Passing
                      example: "2018"
                       
                    
                    DOB:
                      type: string
                      description: Date of Birth
                      example: "dd-mm-yyyy"
                       
                    
                    
                    FullName:
                      type: string
                      description: Full name
                      example: "Sunil Kumar"  
                consentArtifact:
                  $ref: '#/components/schemas/ConsentArtifactSchema'
      responses:
        '200':
          description: The certificate data in response body in PDF, XML or JSON format as requested in format parameter.
          content:
            application/pdf:
              example: Response body contains contents of the certificate in PDF format.
            
            
            
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
        '500':
          $ref: '#/components/responses/500Error'
        '502':
          $ref: '#/components/responses/502Error'
        '503':
          $ref: '#/components/responses/503Error'
        '504':
          $ref: '#/components/responses/504Error'
  
components:
  schemas:
    ConsentArtifactSchema:
      $ref: './common/ConsentArtifactSchema.yaml#/ConsentArtifactSchema'
    AcademicCertificateSchema:
      $ref: './common/AcademicCertificateSchema.yaml#/AcademicCertificateSchema'
          
  responses:
    400Error:
      $ref: './common/ErrorResponse.yaml#/400Error'
    401Error:
      $ref: './common/ErrorResponse.yaml#/401Error'
    404Error:
      $ref: './common/ErrorResponse.yaml#/404Error'
    500Error:
      $ref: './common/ErrorResponse.yaml#/500Error'
    502Error:
      $ref: './common/ErrorResponse.yaml#/502Error'
    503Error:
      $ref: './common/ErrorResponse.yaml#/503Error'
    504Error:
      $ref: './common/ErrorResponse.yaml#/504Error'
  securitySchemes:
    clientId:
      type: apiKey
      in: header
      name: X-APISETU-CLIENTID
    apiKey:
      type: apiKey
      in: header
      name: X-APISETU-APIKEY